#!/bin/bash
# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Example of extracting secrets from 1password (or another compatible pw manager)
# SECRETS=$(kamal secrets fetch --adapter 1password --account your-account --from Vault/Item KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD ${SECRETS})
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY ${SECRETS})

# Use a GITHUB_TOKEN if private repositories are needed for the image
# GITHUB_TOKEN=$(gh config get -h github.com oauth_token)

# ==============================================================================
# DEPLOYMENT SECRETS CONFIGURATION
# ==============================================================================
# Before deploying, export these environment variables in your shell:
#
#   export KAMAL_REGISTRY_PASSWORD=your_docker_hub_token
#   export DATABASE_URL=postgresql://user:pass@host:5432/verysimpleseo_production
#   export OPENAI_API_KEY=sk-proj-...
#   export GEMINI_API_KEY=...
#   export GOOGLE_SEARCH_KEY=...
#   export GOOGLE_SEARCH_CX=...
#   export STRIPE_SECRET_KEY=sk_live_...  # Use LIVE keys for production!
#   export STRIPE_SIGNING_SECRET=whsec_...
#   export RESEND_API_KEY=re_...
#
# Or add them to ~/.zshrc or ~/.bashrc for persistence.
# ==============================================================================

# Docker registry password (from your environment)
# Generate at: https://hub.docker.com/settings/security
KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD

# Rails master key (auto-generated, never commit config/master.key to git!)
RAILS_MASTER_KEY=$(cat config/master.key)

# Database connection string
# For Fly.io: Automatically set by `fly postgres attach`
# For other providers: Set manually in your environment
DATABASE_URL=$DATABASE_URL

# OpenAI API for article writing (GPT-4o Mini)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=$OPENAI_API_KEY

# Gemini API for SERP analysis (Gemini 2.5 Flash)
# Get from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=$GEMINI_API_KEY

# Google Custom Search API (for SERP research)
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_SEARCH_KEY=$GOOGLE_SEARCH_KEY

# Google Custom Search Engine ID
# Create at: https://programmablesearchengine.google.com/
GOOGLE_SEARCH_CX=$GOOGLE_SEARCH_CX

# Stripe secret key (PRODUCTION mode)
# Get from: https://dashboard.stripe.com/apikeys
# IMPORTANT: Use sk_live_... for production, not sk_test_...
STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY

# Stripe webhook signing secret
# Get from: https://dashboard.stripe.com/webhooks
# Create webhook endpoint: https://your-domain.com/pay/webhooks/stripe
STRIPE_SIGNING_SECRET=$STRIPE_SIGNING_SECRET

# Resend API key (for production emails)
# Get from: https://resend.com/api-keys
RESEND_API_KEY=$RESEND_API_KEY
